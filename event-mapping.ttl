@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix  rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@base <http://geotriples.eu/base> .
@prefix rrx: <http://www.w3.org/ns/r2rml-ext#>.
@prefix rrxf: <http://www.w3.org/ns/r2rml-ext/functions/def/>.
@prefix ogc: <http://www.opengis.net/ont/geosparql#>.
@prefix schema: <http://schema.org/>.
@prefix onto: <http://big-data-europe.eu/security/man-made-changes/ontology#>.

<#NewsEvent>
rml:logicalSource [
     rml:source "/resources/events.json";
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$"];

rr:subjectMap [ 
     rr:class onto:NewsEvent; 
     rr:template "http://big-data-europe.eu/security/man-made-changes/NewsEvent/id/{id}"];

rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasId ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "id";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasTitle ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "title";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasDate ];
	rr:objectMap [
		rr:datatype  xsd:dateTime;
		rml:reference "eventDate";
	];
];
rr:predicateObjectMap [ 
     rr:predicate onto:hasArea;
     rr:objectMap [
      rr:parentTriplesMap <#Area>;
    ];
       #rr:template "http://big-data-europe.eu/security/man-made-changes/Area/id/{areas.id}"]].
       
rr:predicateObjectMap [ 
     rr:predicate onto:hasPoolparty;
     rr:objectMap [
      rr:parentTriplesMap <#Poolparty>;
    ];

].
<#Area>
    rml:logicalSource [
     rml:source "/resources/events.json";
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$.areas"];

    rr:subjectMap [ 
     rr:class onto:Area; 
     rr:class ogc:Feature;
     rr:template "http://big-data-europe.eu/security/man-made-changes/Area/id/{id}"];

rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasId ];
	rr:objectMap [
		rr:datatype  xsd:long;
		rml:reference "id";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasName ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "name";
	];
];

rr:predicateObjectMap [ 
     rr:predicate ogc:hasGeometry;
     rr:objectMap [ 
       rr:template "http://big-data-europe.eu/security/man-made-changes/Geometry/id/{id}"]].
       
<#Poolparty>
    rml:logicalSource [
     rml:source "/resources/events.json";
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$.poolparties"];

    rr:subjectMap [ 
     rr:class onto:PoolPartyPair;
     rr:template "http://big-data-europe.eu/security/man-made-changes/PoolParty/Thesaurus/{GeoTriplesID}"];

rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasThesaurusId ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "thesaurus_uuid";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasConceptURI ];
	rr:objectMap [
		rml:reference "concept_uri";
	];
].

<#Geometry>
    rml:logicalSource [
     rml:source "/resources/events.json";
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$.areas"];

    rr:subjectMap [ 
     rr:class ogc:Geometry;
     rr:template "http://big-data-europe.eu/security/man-made-changes/Geometry/id/{id}"];

  rr:predicateObjectMap [ 
     rr:predicate ogc:asWKT;
     rr:objectMap [
       rr:datatype  ogc:wktLiteral;
       rrx:function rrxf:asWKT;
       rrx:argumentMap ([rml:reference "geometry"]) ];].
	
